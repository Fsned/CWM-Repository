  main.cpp
  LED_control.c
  UART_control.c
  port.c
  croutine.c
  event_groups.c
  list.c
  queue.c
  FreeRTOS\include\FreeRTOS.h(104):
  freertos\portable\gcc\arm_cm3\port.c(59):
FreeRTOS\include\portable.h(144,2): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
FreeRTOS\include\portable.h(144,38): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
                                        ^~~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  unknown type name 'BaseType_t'
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  freertos\portable\gcc\arm_cm3\port.c(59):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  freertos\portable\gcc\arm_cm3\port.c(59):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
  freertos\portable\gcc\arm_cm3\port.c(59):
FreeRTOS\include\FreeRTOS.h(876,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(975,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  unknown type name 'TickType_t'
    TickType_t   xDummy3;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  LED_control.h(24):
  LED_control.c(32):
FreeRTOS\include\portable.h(144,2): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
FreeRTOS\include\portable.h(144,38): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
                                        ^~~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  unknown type name 'BaseType_t'
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  LED_control.h(24):
  LED_control.c(32):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  LED_control.h(24):
  LED_control.c(32):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
  LED_control.h(24):
  LED_control.c(32):
FreeRTOS\include\FreeRTOS.h(876,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(975,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  unknown type name 'TickType_t'
    TickType_t   xDummy3;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
  FreeRTOS\include\task.h(78):
  freertos\portable\gcc\arm_cm3\port.c(60):
FreeRTOS\include\list.h(184,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  unknown type name 'UBaseType_t'
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  freertos\portable\gcc\arm_cm3\port.c(60):
FreeRTOS\include\task.h(109,21): error :  expected declaration specifiers or '...' before '*' token
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                       ^
  freertos\portable\gcc\arm_cm3\port.c(60):
FreeRTOS\include\task.h(137,2): error :  unknown type name 'BaseType_t'
    BaseType_t xOverflowCount;
    ^~~~~~~~~~
FreeRTOS\include\task.h(138,2): error :  unknown type name 'TickType_t'
    TickType_t xTimeOnEntering;
    ^~~~~~~~~~
FreeRTOS\include\task.h(160,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxPriority;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(161,2): error :  unknown type name 'StackType_t'
    StackType_t *puxStackBuffer;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(171,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t xTaskNumber;  /* A number unique to the task. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(173,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxCurrentPriority; /* The priority at which the task was running (may be inherited) when the structure was populated. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(174,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxBasePriority;  /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
    ^~~~~~~~~~~
  freertos\portable\gcc\arm_cm3\port.c(60):
FreeRTOS\include\task.h(176,2): error :  unknown type name 'StackType_t'
    StackType_t *pxStackBase;  /* Points to the lowest address of the task's stack area. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(360,2): error :  unknown type name 'BaseType_t'
    BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
    ^~~~~~~~~~
FreeRTOS\include\task.h(364,8): error :  unknown type name 'UBaseType_t'
          UBaseType_t uxPriority,
          ^~~~~~~~~~~
FreeRTOS\include\task.h(695,24): error :  unknown type name 'TickType_t'
   void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
                          ^~~~~~~~~~
FreeRTOS\include\task.h(754,23): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
FreeRTOS\include\task.h(754,68): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(779,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskAbortDelay( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\include\task.h(78):
  LED_control.h(25):
  LED_control.c(32):
FreeRTOS\include\list.h(184,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  unknown type name 'UBaseType_t'
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
FreeRTOS\include\task.h(826,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(834,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(908,68): error :  unknown type name 'BaseType_t'
   void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
  LED_control.h(25):
  LED_control.c(32):
FreeRTOS\include\task.h(109,21): error :  expected declaration specifiers or '...' before '*' token
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                       ^
  LED_control.h(25):
  LED_control.c(32):
FreeRTOS\include\task.h(137,2): error :  unknown type name 'BaseType_t'
    BaseType_t xOverflowCount;
    ^~~~~~~~~~
FreeRTOS\include\task.h(138,2): error :  unknown type name 'TickType_t'
    TickType_t xTimeOnEntering;
    ^~~~~~~~~~
FreeRTOS\include\task.h(160,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxPriority;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(161,2): error :  unknown type name 'StackType_t'
    StackType_t *puxStackBuffer;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(171,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t xTaskNumber;  /* A number unique to the task. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(173,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxCurrentPriority; /* The priority at which the task was running (may be inherited) when the structure was populated. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(174,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxBasePriority;  /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
    ^~~~~~~~~~~
  LED_control.h(25):
  LED_control.c(32):
FreeRTOS\include\task.h(176,2): error :  unknown type name 'StackType_t'
    StackType_t *pxStackBase;  /* Points to the lowest address of the task's stack area. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(950,44): error :  unknown type name 'UBaseType_t'
   void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) PRIVILEGED_FUNCTION;
                                              ^~~~~~~~~~~
FreeRTOS\include\task.h(360,2): error :  unknown type name 'BaseType_t'
    BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
    ^~~~~~~~~~
FreeRTOS\include\task.h(1079,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(364,8): error :  unknown type name 'UBaseType_t'
          UBaseType_t uxPriority,
          ^~~~~~~~~~~
FreeRTOS\include\task.h(1273,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeAll( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(695,24): error :  unknown type name 'TickType_t'
   void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
                          ^~~~~~~~~~
FreeRTOS\include\task.h(1288,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCount( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(754,23): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
FreeRTOS\include\task.h(754,68): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(1304,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCountFromISR( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(779,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskAbortDelay( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1318,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetNumberOfTasks( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(826,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1368,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(834,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1421,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(908,68): error :  unknown type name 'BaseType_t'
   void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(1529,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1529,81): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
                                                                                   ^~~~~~~~~~~
FreeRTOS\include\task.h(950,44): error :  unknown type name 'UBaseType_t'
   void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) PRIVILEGED_FUNCTION;
                                              ^~~~~~~~~~~
FreeRTOS\include\task.h(1711,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1079,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1273,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeAll( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,148): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(1288,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCount( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1304,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCountFromISR( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,122): error :  unknown type name 'TickType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(1318,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetNumberOfTasks( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1980,58): error :  unknown type name 'BaseType_t'
   void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2049,28): error :  unknown type name 'BaseType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                              ^~~~~~~~~~
FreeRTOS\include\task.h(1368,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2049,58): error :  unknown type name 'TickType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(1421,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2065,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );
   ^~~~~~~~~~
FreeRTOS\include\task.h(1529,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1529,81): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
                                                                                   ^~~~~~~~~~~
FreeRTOS\include\task.h(2086,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskIncrementTick( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2119,63): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2120,66): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2120,95): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(1711,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2133,67): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(2133,98): error :  unknown type name 'BaseType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(1802,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2159,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,83): error :  unknown type name 'TickType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
                                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(1802,148): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(2176,1): error :  unknown type name 'TickType_t'
   TickType_t uxTaskResetEventItemValue( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2192,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2192,63): error :  unknown type name 'TickType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2204,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGetSchedulerState( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,122): error :  unknown type name 'TickType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2216,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1980,58): error :  unknown type name 'BaseType_t'
   void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2221,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2227,52): error :  unknown type name 'UBaseType_t'
   void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\task.h(2237,27): error :  unknown type name 'TickType_t'
   void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
                             ^~~~~~~~~~
FreeRTOS\include\task.h(2049,28): error :  unknown type name 'BaseType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                              ^~~~~~~~~~
freertos\portable\gcc\arm_cm3\port.c(168,15): error :  conflicting types for 'xPortStartScheduler'
   portBASE_TYPE xPortStartScheduler( void )
                 ^~~~~~~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  freertos\portable\gcc\arm_cm3\port.c(59):
  FreeRTOS\include\portable.h(181,12): note :  previous declaration of 'xPortStartScheduler' was here
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
              ^~~~~~~~~~~~~~~~~~~
  freertos/portable/gcc/arm_cm3/port.c: In function 'xPortStartScheduler':
freertos\portable\gcc\arm_cm3\port.c(171,2): error :  invalid type argument of unary '*' (have 'unsigned int')
    *(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
    ^~~~~~~~~~~~~~~~~~~
freertos\portable\gcc\arm_cm3\port.c(172,2): error :  invalid type argument of unary '*' (have 'unsigned int')
    *(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
    ^~~~~~~~~~~~~~~~~~~
  freertos/portable/gcc/arm_cm3/port.c: In function 'vPortYieldFromISR':
freertos\portable\gcc\arm_cm3\port.c(199,2): error :  invalid type argument of unary '*' (have 'unsigned int')
    *(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
    ^~~~~~~~~~~~~~~~~~~~
  freertos/portable/gcc/arm_cm3/port.c: In function 'SysTick_Handler':
freertos\portable\gcc\arm_cm3\port.c(261,3): error :  invalid type argument of unary '*' (have 'unsigned int')
     *(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
     ^~~~~~~~~~~~~~~~~~~~
FreeRTOS\include\task.h(2049,58): error :  unknown type name 'TickType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
freertos\portable\gcc\arm_cm3\port.c(266,3): warning :  implicit declaration of function 'vTaskIncrementTick'; did you mean 'xTaskIncrementTick'? [-Wimplicit-function-declaration]
     vTaskIncrementTick();
     ^~~~~~~~~~~~~~~~~~
     xTaskIncrementTick
  freertos/portable/gcc/arm_cm3/port.c: In function 'prvSetupTimerInterrupt':
freertos\portable\gcc\arm_cm3\port.c(279,2): error :  invalid type argument of unary '*' (have 'unsigned int')
    *(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    ^~~~~~~~~~~~~~~~~~~~~~~~
FreeRTOS\include\task.h(2065,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );
   ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(98):
  freertos\portable\gcc\arm_cm3\port.c(59):
FreeRTOS\FreeRTOSConfig.h(93,35): error :  'TickType_t' undeclared (first use in this function)
   #define configTICK_RATE_HZ    ( ( TickType_t ) 1000 )
                                     ^
  freertos\portable\gcc\arm_cm3\port.c(279,52): note :  in expansion of macro 'configTICK_RATE_HZ'
    *(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
                                                      ^~~~~~~~~~~~~~~~~~
  FreeRTOS\FreeRTOSConfig.h(93,35): note :  each undeclared identifier is reported only once for each function it appears in
   #define configTICK_RATE_HZ    ( ( TickType_t ) 1000 )
                                     ^
  freertos\portable\gcc\arm_cm3\port.c(279,52): note :  in expansion of macro 'configTICK_RATE_HZ'
    *(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
                                                      ^~~~~~~~~~~~~~~~~~
FreeRTOS\FreeRTOSConfig.h(93,48): error :  expected ')' before numeric constant
   #define configTICK_RATE_HZ    ( ( TickType_t ) 1000 )
                                                  ^
  freertos\portable\gcc\arm_cm3\port.c(279,52): note :  in expansion of macro 'configTICK_RATE_HZ'
    *(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
                                                      ^~~~~~~~~~~~~~~~~~
freertos\portable\gcc\arm_cm3\port.c(280,2): error :  invalid type argument of unary '*' (have 'unsigned int')
    *(portNVIC_SYSTICK_CTRL) = portNVIC_SYSTICK_CLK | portNVIC_SYSTICK_INT | portNVIC_SYSTICK_ENABLE;
    ^~~~~~~~~~~~~~~~~~~~~~~~
FreeRTOS\include\task.h(2086,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskIncrementTick( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2119,63): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2120,66): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2120,95): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2133,67): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(2133,98): error :  unknown type name 'BaseType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2159,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,83): error :  unknown type name 'TickType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
                                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(2176,1): error :  unknown type name 'TickType_t'
   TickType_t uxTaskResetEventItemValue( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2192,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\croutine.c(70):
FreeRTOS\include\portable.h(144,2): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
FreeRTOS\include\portable.h(144,38): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
                                        ^~~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  unknown type name 'BaseType_t'
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\croutine.c(70):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\croutine.c(70):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
  FreeRTOS\croutine.c(70):
FreeRTOS\include\FreeRTOS.h(876,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(975,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  unknown type name 'TickType_t'
    TickType_t   xDummy3;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
  FreeRTOS\include\task.h(78):
  FreeRTOS\croutine.c(71):
FreeRTOS\include\list.h(184,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  unknown type name 'UBaseType_t'
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  FreeRTOS\croutine.c(71):
FreeRTOS\include\task.h(109,21): error :  expected declaration specifiers or '...' before '*' token
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                       ^
  FreeRTOS\croutine.c(71):
FreeRTOS\include\task.h(137,2): error :  unknown type name 'BaseType_t'
    BaseType_t xOverflowCount;
    ^~~~~~~~~~
FreeRTOS\include\task.h(138,2): error :  unknown type name 'TickType_t'
    TickType_t xTimeOnEntering;
    ^~~~~~~~~~
FreeRTOS\include\task.h(160,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxPriority;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(161,2): error :  unknown type name 'StackType_t'
    StackType_t *puxStackBuffer;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(171,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t xTaskNumber;  /* A number unique to the task. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(173,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxCurrentPriority; /* The priority at which the task was running (may be inherited) when the structure was populated. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(174,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxBasePriority;  /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
    ^~~~~~~~~~~
  FreeRTOS\croutine.c(71):
FreeRTOS\include\task.h(176,2): error :  unknown type name 'StackType_t'
    StackType_t *pxStackBase;  /* Points to the lowest address of the task's stack area. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(360,2): error :  unknown type name 'BaseType_t'
    BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
    ^~~~~~~~~~
FreeRTOS\include\task.h(2192,63): error :  unknown type name 'TickType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(364,8): error :  unknown type name 'UBaseType_t'
          UBaseType_t uxPriority,
          ^~~~~~~~~~~
FreeRTOS\include\task.h(695,24): error :  unknown type name 'TickType_t'
   void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
                          ^~~~~~~~~~
FreeRTOS\include\task.h(754,23): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
FreeRTOS\include\task.h(754,68): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(2204,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGetSchedulerState( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(779,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskAbortDelay( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(826,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(834,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2216,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(908,68): error :  unknown type name 'BaseType_t'
   void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(950,44): error :  unknown type name 'UBaseType_t'
   void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) PRIVILEGED_FUNCTION;
                                              ^~~~~~~~~~~
FreeRTOS\include\task.h(1079,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2221,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2227,52): error :  unknown type name 'UBaseType_t'
   void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\task.h(1273,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeAll( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2237,27): error :  unknown type name 'TickType_t'
   void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
                             ^~~~~~~~~~
FreeRTOS\include\task.h(1288,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCount( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1304,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCountFromISR( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1318,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetNumberOfTasks( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1368,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1421,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1529,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1529,81): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
                                                                                   ^~~~~~~~~~~
FreeRTOS\include\task.h(1711,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,148): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(1879,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,122): error :  unknown type name 'TickType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(1980,58): error :  unknown type name 'BaseType_t'
   void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2049,28): error :  unknown type name 'BaseType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                              ^~~~~~~~~~
FreeRTOS\include\task.h(2049,58): error :  unknown type name 'TickType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2065,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );
   ^~~~~~~~~~
FreeRTOS\include\task.h(2086,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskIncrementTick( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2119,63): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2120,66): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2120,95): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                 ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  UART_control.c(32):
FreeRTOS\include\portable.h(144,2): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(2133,67): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(2133,98): error :  unknown type name 'BaseType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2159,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\portable.h(144,38): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
                                        ^~~~~~~~~~~
FreeRTOS\include\task.h(2160,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,83): error :  unknown type name 'TickType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
                                                                                     ^~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  unknown type name 'BaseType_t'
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2176,1): error :  unknown type name 'TickType_t'
   TickType_t uxTaskResetEventItemValue( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2192,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(32):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
FreeRTOS\include\task.h(2192,63): error :  unknown type name 'TickType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  UART_control.c(32):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
  UART_control.c(32):
FreeRTOS\include\FreeRTOS.h(876,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(975,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  unknown type name 'TickType_t'
    TickType_t   xDummy3;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(2204,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGetSchedulerState( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2216,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2221,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2227,52): error :  unknown type name 'UBaseType_t'
   void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\task.h(2237,27): error :  unknown type name 'TickType_t'
   void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
                             ^~~~~~~~~~
  FreeRTOS\include\task.h(78):
  UART_control.c(33):
FreeRTOS\include\list.h(184,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  unknown type name 'UBaseType_t'
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  UART_control.c(33):
FreeRTOS\include\task.h(109,21): error :  expected declaration specifiers or '...' before '*' token
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                       ^
  UART_control.c(33):
FreeRTOS\include\task.h(137,2): error :  unknown type name 'BaseType_t'
    BaseType_t xOverflowCount;
    ^~~~~~~~~~
FreeRTOS\include\task.h(138,2): error :  unknown type name 'TickType_t'
    TickType_t xTimeOnEntering;
    ^~~~~~~~~~
FreeRTOS\include\task.h(160,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxPriority;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(161,2): error :  unknown type name 'StackType_t'
    StackType_t *puxStackBuffer;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(171,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t xTaskNumber;  /* A number unique to the task. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(173,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxCurrentPriority; /* The priority at which the task was running (may be inherited) when the structure was populated. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(174,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxBasePriority;  /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
    ^~~~~~~~~~~
  UART_control.c(33):
FreeRTOS\include\task.h(176,2): error :  unknown type name 'StackType_t'
    StackType_t *pxStackBase;  /* Points to the lowest address of the task's stack area. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(360,2): error :  unknown type name 'BaseType_t'
    BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
    ^~~~~~~~~~
  UART_control.h(22):
  LED_control.c(35):
FreeRTOS\include\queue.h(692,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(364,8): error :  unknown type name 'UBaseType_t'
          UBaseType_t uxPriority,
          ^~~~~~~~~~~
FreeRTOS\include\queue.h(692,87): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                         ^~~~~~~~~~
                                                                                         TPI_Type
FreeRTOS\include\task.h(695,24): error :  unknown type name 'TickType_t'
   void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
                          ^~~~~~~~~~
FreeRTOS\include\queue.h(692,118): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                                        ^~~~~~~~~~
FreeRTOS\include\task.h(754,23): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
                         TPI_Type
FreeRTOS\include\queue.h(821,1): error :  unknown type name 'BaseType_t'
FreeRTOS\include\task.h(754,68): error :  unknown type name 'TickType_t'
   BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue, void * const pvBuffer ) PRIVILEGED_FUNCTION;
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
   ^~~~~~~~~~
FreeRTOS\include\task.h(779,1): error :  unknown type name 'BaseType_t'
FreeRTOS\include\queue.h(1013,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskAbortDelay( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1013,79): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
                                                                                 TPI_Type
FreeRTOS\include\queue.h(1013,110): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
                                                                                                                ^~~~~~~~~~
FreeRTOS\include\task.h(826,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1028,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(834,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1045,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(908,68): error :  unknown type name 'BaseType_t'
   void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\queue.h(1440,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(950,44): error :  unknown type name 'UBaseType_t'
   void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) PRIVILEGED_FUNCTION;
                                              ^~~~~~~~~~~
FreeRTOS\include\queue.h(1440,94): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                ^~~~~~~~~~
FreeRTOS\include\queue.h(1440,146): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(1079,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1441,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1273,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeAll( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1441,53): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                       ^~~~~~~~~~
FreeRTOS\include\task.h(1288,1): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   TickType_t xTaskGetTickCount( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
   TPI_Type
FreeRTOS\include\task.h(1304,1): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   TickType_t xTaskGetTickCountFromISR( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
   TPI_Type
FreeRTOS\include\queue.h(1530,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1530,79): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
  FreeRTOS\croutine.c(72):
FreeRTOS\include\croutine.h(89,54): error :  unknown type name 'UBaseType_t'
   typedef void (*crCOROUTINE_CODE)( CoRoutineHandle_t, UBaseType_t );
                                                        ^~~~~~~~~~~
FreeRTOS\include\croutine.h(93,2): error :  unknown type name 'crCOROUTINE_CODE'
    crCOROUTINE_CODE  pxCoRoutineFunction;
    ^~~~~~~~~~~~~~~~
FreeRTOS\include\croutine.h(96,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxPriority;   /*< The priority of the co-routine in relation to other co-routines. */
    ^~~~~~~~~~~
FreeRTOS\include\croutine.h(97,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxIndex;   /*< Used to distinguish between co-routines when multiple co-routines use the same co-routine function. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(1318,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetNumberOfTasks( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  FreeRTOS\croutine.c(72):
FreeRTOS\include\croutine.h(173,1): error :  unknown type name 'BaseType_t'
   BaseType_t xCoRoutineCreate( crCOROUTINE_CODE pxCoRoutineCode, UBaseType_t uxPriority, UBaseType_t uxIndex );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1536,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1368,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1537,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\croutine.h(173,30): error :  unknown type name 'crCOROUTINE_CODE'; did you mean 'CO_ROUTINE_H'?
   BaseType_t xCoRoutineCreate( crCOROUTINE_CODE pxCoRoutineCode, UBaseType_t uxPriority, UBaseType_t uxIndex );
                                ^~~~~~~~~~~~~~~~
                                CO_ROUTINE_H
FreeRTOS\include\task.h(1421,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1538,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\croutine.h(173,64): error :  unknown type name 'UBaseType_t'
   BaseType_t xCoRoutineCreate( crCOROUTINE_CODE pxCoRoutineCode, UBaseType_t uxPriority, UBaseType_t uxIndex );
                                                                  ^~~~~~~~~~~
FreeRTOS\include\task.h(1529,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1529,81): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
                                                                                   ^~~~~~~~~~~
FreeRTOS\include\croutine.h(173,88): error :  unknown type name 'UBaseType_t'
   BaseType_t xCoRoutineCreate( crCOROUTINE_CODE pxCoRoutineCode, UBaseType_t uxPriority, UBaseType_t uxIndex );
                                                                                          ^~~~~~~~~~~
FreeRTOS\include\queue.h(1549,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
   ^~~~~~~~~~
FreeRTOS\include\croutine.h(747,34): error :  unknown type name 'TickType_t'
   void vCoRoutineAddToDelayedList( TickType_t xTicksToDelay, List_t *pxEventList );
                                    ^~~~~~~~~~
FreeRTOS\include\task.h(1711,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1549,82): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
                                                                                    ^~~~~~~~~~
FreeRTOS\include\croutine.h(756,1): error :  unknown type name 'BaseType_t'
   BaseType_t xCoRoutineRemoveFromEventList( const List_t *pxEventList );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1550,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1550,74): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
                                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(1802,148): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                                                                                      ^~~~~~~~~~
FreeRTOS\include\queue.h(1551,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1551,75): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
                                                                             ^~~~~~~~~~
                                                                             TPI_Type
FreeRTOS\include\task.h(1879,122): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                            ^~~~~~~~~~
                                                                                                                            TPI_Type
FreeRTOS\include\queue.h(1552,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1552,67): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );
                                                                     ^~~~~~~~~~
                                                                     TPI_Type
FreeRTOS\include\task.h(1980,58): error :  unknown type name 'BaseType_t'
   void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\queue.h(1561,52): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\queue.h(1561,82): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                                                    ^~~~~~~~~~~
FreeRTOS\include\queue.h(1562,58): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~~
FreeRTOS\include\queue.h(1562,88): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                                                          ^~~~~~~~~~~
FreeRTOS\include\task.h(2049,28): error :  unknown type name 'BaseType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                              ^~~~~~~~~~
FreeRTOS\include\queue.h(1569,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2049,58): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
                                                            TPI_Type
FreeRTOS\include\queue.h(1569,60): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                              ^~~~~~~~~~
                                                              TPI_Type
FreeRTOS\include\queue.h(1570,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveMutexRecursive( QueueHandle_t pxMutex ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1639,43): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                             ^~~~~~~~~~~
FreeRTOS\include\queue.h(1639,76): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                                                              ^~~~~~~~~~~
FreeRTOS\include\task.h(2065,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1699,41): error :  unknown type name 'UBaseType_t'
   QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength ) PRIVILEGED_FUNCTION;
                                           ^~~~~~~~~~~
FreeRTOS\include\task.h(2086,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskIncrementTick( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2119,63): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2120,66): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2120,95): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                 ^~~~~~~~~~
FreeRTOS\include\queue.h(1723,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2133,67): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                     ^~~~~~~~~~
                                                                     TPI_Type
FreeRTOS\include\task.h(2133,98): error :  unknown type name 'BaseType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                                    ^~~~~~~~~~
FreeRTOS\include\queue.h(1742,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1778,79): error :  unknown type name 'TickType_t'
   QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
FreeRTOS\include\queue.h(1786,60): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                              ^~~~~~~~~~
                                                              TPI_Type
FreeRTOS\include\queue.h(1786,91): error :  unknown type name 'BaseType_t'
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                             ^~~~~~~~~~
FreeRTOS\include\task.h(2159,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1787,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,83): error :  unknown type name 'TickType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
                                                                                     ^~~~~~~~~~
FreeRTOS\include\queue.h(1787,54): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) PRIVILEGED_FUNCTION;
                                                        ^~~~~~~~~~
FreeRTOS\include\task.h(2176,1): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   TickType_t uxTaskResetEventItemValue( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
   TPI_Type
FreeRTOS\include\queue.h(1788,50): error :  unknown type name 'UBaseType_t'
   void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber ) PRIVILEGED_FUNCTION;
                                                    ^~~~~~~~~~~
FreeRTOS\include\task.h(2192,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1789,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2192,63): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
                                                                 TPI_Type
FreeRTOS\include\task.h(2204,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGetSchedulerState( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2216,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2221,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2227,52): error :  unknown type name 'UBaseType_t'
   void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\task.h(2237,27): error :  unknown type name 'TickType_t'
   void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
                             ^~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(692,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(692,87): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                         ^~~~~~~~~~
                                                                                         TPI_Type
FreeRTOS\include\queue.h(692,118): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                                        ^~~~~~~~~~
FreeRTOS\include\queue.h(821,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue, void * const pvBuffer ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1013,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1013,79): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
                                                                                 TPI_Type
FreeRTOS\include\queue.h(1013,110): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
                                                                                                                ^~~~~~~~~~
FreeRTOS\include\queue.h(1028,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1045,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1440,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1440,94): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                ^~~~~~~~~~
FreeRTOS\include\queue.h(1440,146): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                                                                    ^~~~~~~~~~
FreeRTOS\include\queue.h(1441,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1441,53): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                       ^~~~~~~~~~
FreeRTOS\include\queue.h(1530,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\list.c(72):
FreeRTOS\include\portable.h(144,2): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
FreeRTOS\include\queue.h(1530,79): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
FreeRTOS\include\portable.h(144,38): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
                                        ^~~~~~~~~~~
FreeRTOS\include\queue.h(1536,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  unknown type name 'BaseType_t'
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\list.c(72):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
FreeRTOS\include\queue.h(1537,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\list.c(72):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
  FreeRTOS\list.c(72):
FreeRTOS\include\FreeRTOS.h(876,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\event_groups.c(79):
FreeRTOS\include\portable.h(144,2): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(975,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  unknown type name 'TickType_t'
    TickType_t   xDummy3;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
FreeRTOS\include\portable.h(144,38): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
                                        ^~~~~~~~~~~
FreeRTOS\include\queue.h(1538,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  unknown type name 'BaseType_t'
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\event_groups.c(79):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\event_groups.c(79):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
  FreeRTOS\event_groups.c(79):
FreeRTOS\include\FreeRTOS.h(876,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
FreeRTOS\include\queue.h(1549,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
   ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(975,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  unknown type name 'TickType_t'
    TickType_t   xDummy3;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
FreeRTOS\include\queue.h(1549,82): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
                                                                                    ^~~~~~~~~~
FreeRTOS\include\queue.h(1550,1): error :  unknown type name 'BaseType_t'
  FreeRTOS\list.c(73):
   BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
FreeRTOS\include\list.h(184,22): error :  unknown type name 'TickType_t'
   ^~~~~~~~~~
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  unknown type name 'UBaseType_t'
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1550,74): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
                                                                            ^~~~~~~~~~
  FreeRTOS\list.c(72):
  FreeRTOS/list.c: In function 'vListInitialise':
FreeRTOS\include\FreeRTOS.h(825,23): error :  'TickType_t' undeclared (first use in this function); did you mean 'portTickType'?
    #define portTickType TickType_t
                         ^
  freertos\portable\gcc\arm_cm3\portmacro.h(86,26): note :  in expansion of macro 'portTickType'
    #define portMAX_DELAY ( portTickType ) 0xffffffff
                            ^~~~~~~~~~~~
  FreeRTOS\list.c(88,32): note :  in expansion of macro 'portMAX_DELAY'
    pxList->xListEnd.xItemValue = portMAX_DELAY;
                                  ^~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(825,23): note :  each undeclared identifier is reported only once for each function it appears in
    #define portTickType TickType_t
                         ^
  freertos\portable\gcc\arm_cm3\portmacro.h(86,26): note :  in expansion of macro 'portTickType'
    #define portMAX_DELAY ( portTickType ) 0xffffffff
                            ^~~~~~~~~~~~
  FreeRTOS\list.c(88,32): note :  in expansion of macro 'portMAX_DELAY'
    pxList->xListEnd.xItemValue = portMAX_DELAY;
                                  ^~~~~~~~~~~~~
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\list.c(72):
freertos\portable\gcc\arm_cm3\portmacro.h(86,41): error :  expected ';' before numeric constant
    #define portMAX_DELAY ( portTickType ) 0xffffffff
                                           ^
  FreeRTOS\list.c(88,32): note :  in expansion of macro 'portMAX_DELAY'
    pxList->xListEnd.xItemValue = portMAX_DELAY;
                                  ^~~~~~~~~~~~~
FreeRTOS\include\queue.h(1551,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1551,75): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
                                                                             ^~~~~~~~~~
                                                                             TPI_Type
FreeRTOS\list.c(95,30): error :  'UBaseType_t' undeclared (first use in this function); did you mean 'TickType_t'?
    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
                                ^~~~~~~~~~~
                                TickType_t
FreeRTOS\list.c(95,44): error :  expected ';' before numeric constant
    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
                                              ^~
  FreeRTOS/list.c: In function 'vListInsert':
FreeRTOS\list.c(148,7): error :  unknown type name 'TickType_t'
   const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
         ^~~~~~~~~~
  FreeRTOS\include\task.h(78):
  FreeRTOS\event_groups.c(80):
FreeRTOS\include\list.h(184,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  unknown type name 'UBaseType_t'
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
FreeRTOS\include\queue.h(1552,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );
   ^~~~~~~~~~
  FreeRTOS\list.c(72):
FreeRTOS\include\FreeRTOS.h(825,23): error :  'TickType_t' undeclared (first use in this function); did you mean 'portTickType'?
    #define portTickType TickType_t
                         ^
  freertos\portable\gcc\arm_cm3\portmacro.h(86,26): note :  in expansion of macro 'portTickType'
    #define portMAX_DELAY ( portTickType ) 0xffffffff
                            ^~~~~~~~~~~~
  FreeRTOS\list.c(164,27): note :  in expansion of macro 'portMAX_DELAY'
    if( xValueOfInsertion == portMAX_DELAY )
                             ^~~~~~~~~~~~~
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\list.c(72):
freertos\portable\gcc\arm_cm3\portmacro.h(86,41): error :  expected ')' before numeric constant
    #define portMAX_DELAY ( portTickType ) 0xffffffff
                                           ^
  FreeRTOS\list.c(164,27): note :  in expansion of macro 'portMAX_DELAY'
    if( xValueOfInsertion == portMAX_DELAY )
                             ^~~~~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1552,67): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );
                                                                     ^~~~~~~~~~
                                                                     TPI_Type
  FreeRTOS/list.c: At top level:
FreeRTOS\list.c(212,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1561,52): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\queue.h(1561,82): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                                                    ^~~~~~~~~~~
  FreeRTOS\event_groups.c(80):
FreeRTOS\include\task.h(109,21): error :  expected declaration specifiers or '...' before '*' token
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                       ^
FreeRTOS\include\queue.h(1562,58): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~~
FreeRTOS\include\queue.h(1562,88): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                                                          ^~~~~~~~~~~
  FreeRTOS\event_groups.c(80):
FreeRTOS\include\task.h(137,2): error :  unknown type name 'BaseType_t'
    BaseType_t xOverflowCount;
    ^~~~~~~~~~
FreeRTOS\include\task.h(138,2): error :  unknown type name 'TickType_t'
    TickType_t xTimeOnEntering;
    ^~~~~~~~~~
FreeRTOS\include\task.h(160,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxPriority;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(161,2): error :  unknown type name 'StackType_t'
    StackType_t *puxStackBuffer;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(171,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t xTaskNumber;  /* A number unique to the task. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(173,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxCurrentPriority; /* The priority at which the task was running (may be inherited) when the structure was populated. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(174,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxBasePriority;  /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
    ^~~~~~~~~~~
  FreeRTOS\event_groups.c(80):
FreeRTOS\include\task.h(176,2): error :  unknown type name 'StackType_t'
    StackType_t *pxStackBase;  /* Points to the lowest address of the task's stack area. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(360,2): error :  unknown type name 'BaseType_t'
FreeRTOS\include\queue.h(1569,1): error :  unknown type name 'BaseType_t'
    BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
    ^~~~~~~~~~
   BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(364,8): error :  unknown type name 'UBaseType_t'
          UBaseType_t uxPriority,
          ^~~~~~~~~~~
FreeRTOS\include\task.h(695,24): error :  unknown type name 'TickType_t'
   void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
                          ^~~~~~~~~~
FreeRTOS\include\queue.h(1569,60): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                              ^~~~~~~~~~
                                                              TPI_Type
FreeRTOS\include\task.h(754,23): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
FreeRTOS\include\task.h(754,68): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\queue.h(1570,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveMutexRecursive( QueueHandle_t pxMutex ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1639,43): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                             ^~~~~~~~~~~
FreeRTOS\include\queue.h(1639,76): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                                                              ^~~~~~~~~~~
FreeRTOS\include\queue.h(1699,41): error :  unknown type name 'UBaseType_t'
   QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength ) PRIVILEGED_FUNCTION;
                                           ^~~~~~~~~~~
FreeRTOS\include\task.h(779,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskAbortDelay( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(826,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1723,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(834,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1742,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1778,79): error :  unknown type name 'TickType_t'
   QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(908,68): error :  unknown type name 'BaseType_t'
   void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(950,44): error :  unknown type name 'UBaseType_t'
   void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) PRIVILEGED_FUNCTION;
                                              ^~~~~~~~~~~
FreeRTOS\include\queue.h(1786,60): error :  unknown type name 'TickType_t'; did you mean 'TPI_Type'?
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                              ^~~~~~~~~~
                                                              TPI_Type
FreeRTOS\include\queue.h(1786,91): error :  unknown type name 'BaseType_t'
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                             ^~~~~~~~~~
FreeRTOS\include\task.h(1079,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1787,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1273,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeAll( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1288,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCount( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1787,54): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) PRIVILEGED_FUNCTION;
                                                        ^~~~~~~~~~
FreeRTOS\include\task.h(1304,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCountFromISR( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1788,50): error :  unknown type name 'UBaseType_t'
   void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber ) PRIVILEGED_FUNCTION;
                                                    ^~~~~~~~~~~
FreeRTOS\include\task.h(1318,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetNumberOfTasks( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1789,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1368,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1421,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1529,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1529,81): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
                                                                                   ^~~~~~~~~~~
FreeRTOS\include\task.h(1711,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,148): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(1879,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,122): error :  unknown type name 'TickType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(1980,58): error :  unknown type name 'BaseType_t'
   void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2049,28): error :  unknown type name 'BaseType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                              ^~~~~~~~~~
FreeRTOS\include\task.h(2049,58): error :  unknown type name 'TickType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2065,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );
   ^~~~~~~~~~
FreeRTOS\include\task.h(2086,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskIncrementTick( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2119,63): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2120,66): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2120,95): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2133,67): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(2133,98): error :  unknown type name 'BaseType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2159,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(41):
Sensor_file.h(90,1): error :  empty enum is invalid
   } DIGITAL_SENSOR;
   ^
FreeRTOS\include\task.h(2160,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,83): error :  unknown type name 'TickType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
                                                                                     ^~~~~~~~~~
  Programs_file.h(22):
  main.cpp(23):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  Programs_file.h(22):
  main.cpp(23):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
FreeRTOS\include\task.h(2176,1): error :  unknown type name 'TickType_t'
   TickType_t uxTaskResetEventItemValue( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2192,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(35):
  UART_control.c: In function 'nADC_Status':
FreeRTOS\include\semphr.h(331,51): warning :  implicit declaration of function 'xQueueGenericReceive'; did you mean 'xQueueGenericCreate'? [-Wimplicit-function-declaration]
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                     ^
  UART_control.c(205,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
FreeRTOS\include\task.h(2192,63): error :  unknown type name 'TickType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2204,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGetSchedulerState( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function)
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(205,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
  FreeRTOS\include\projdefs.h(86,23): note :  each undeclared identifier is reported only once for each function it appears in
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(205,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(205,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
FreeRTOS\include\task.h(2216,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2221,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(489,39): warning :  implicit declaration of function 'xQueueGenericSend'; did you mean 'xQueueGenericCreate'? [-Wimplicit-function-declaration]
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                         ^
  UART_control.c(222,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
FreeRTOS\include\task.h(2227,52): error :  unknown type name 'UBaseType_t'
   void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\task.h(2237,27): error :  unknown type name 'TickType_t'
   void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
                             ^~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,36): error :  'TickType_t' undeclared (first use in this function); did you mean 'BaseType_t'?
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                      ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(222,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(222,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(222,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
  UART_control.c: In function 'nPinFlip_1':
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function)
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(259,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(259,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,36): error :  'TickType_t' undeclared (first use in this function); did you mean 'BaseType_t'?
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                      ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(263,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(263,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(263,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
  UART_control.c: In function 'nPinFlip_2':
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function)
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(282,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(282,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,36): error :  'TickType_t' undeclared (first use in this function); did you mean 'BaseType_t'?
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                      ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(286,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(286,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(286,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\queue.c(78):
FreeRTOS\include\portable.h(144,2): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
  UART_control.c: In function 'nUART_TxChar':
FreeRTOS\include\queue.h(105,32): error :  'BaseType_t' undeclared (first use in this function)
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                  ^
  FreeRTOS\include\queue.h(521,127): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )
                                                                                                                                 ^~~~~~~~~~~~~~~~~
  UART_control.c(562,2): note :  in expansion of macro 'xQueueSend'
    xQueueSend(qUART_TxQ , &ch , 10);
    ^~~~~~~~~~
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\queue.h(521,127): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )
                                                                                                                                 ^~~~~~~~~~~~~~~~~
  UART_control.c(562,2): note :  in expansion of macro 'xQueueSend'
    xQueueSend(qUART_TxQ , &ch , 10);
    ^~~~~~~~~~
  UART_control.c: In function 'nUART_RxChar':
FreeRTOS\include\queue.h(105,32): error :  'BaseType_t' undeclared (first use in this function)
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                  ^
  FreeRTOS\include\queue.h(521,127): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )
                                                                                                                                 ^~~~~~~~~~~~~~~~~
  UART_control.c(580,3): note :  in expansion of macro 'xQueueSend'
     xQueueSend(qUART_RxQ , &ch , 2);
     ^~~~~~~~~~
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\queue.h(521,127): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )
                                                                                                                                 ^~~~~~~~~~~~~~~~~
  UART_control.c(580,3): note :  in expansion of macro 'xQueueSend'
     xQueueSend(qUART_RxQ , &ch , 2);
     ^~~~~~~~~~
FreeRTOS\include\portable.h(144,38): error :  unknown type name 'StackType_t'
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
                                        ^~~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  unknown type name 'BaseType_t'
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
  UART_control.c: In function 'nTerminalHelp':
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function)
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(606,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(606,6): note :  in expansion of macro 'xSemaphoreTake'
    if (xSemaphoreTake(UART0_TxSemaphore , 5))
        ^~~~~~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,36): error :  'TickType_t' undeclared (first use in this function); did you mean 'BaseType_t'?
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                      ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(619,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(619,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(619,3): note :  in expansion of macro 'xSemaphoreGive'
     xSemaphoreGive(UART0_TxSemaphore);
     ^~~~~~~~~~~~~~
  FreeRTOS\queue.c(78):
FreeRTOS\include\FreeRTOS.h(838): warning :  "portTICK_RATE_MS" redefined
    #define portTICK_RATE_MS portTICK_PERIOD_MS
   
  FreeRTOS\include\portable.h(94):
  FreeRTOS\include\FreeRTOS.h(104):
  FreeRTOS\queue.c(78):
  freertos\portable\gcc\arm_cm3\portmacro.h(92): note :  this is the location of the previous definition
   #define portTICK_RATE_MS   ( ( portTickType ) 1000 / configTICK_RATE_HZ )
   
  FreeRTOS\queue.c(78):
FreeRTOS\include\FreeRTOS.h(876,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
  UART_control.c(35):
  UART_control.c: In function 'tUART_RxTask':
FreeRTOS\include\FreeRTOS.h(975,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\semphr.h(204,58): error :  'UBaseType_t' undeclared (first use in this function)
    #define xSemaphoreCreateBinary() xQueueGenericCreate( ( UBaseType_t ) 1, semSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_BINARY_SEMAPHORE )
                                                            ^
  UART_control.c(807,22): note :  in expansion of macro 'xSemaphoreCreateBinary'
    UART0_TxSemaphore = xSemaphoreCreateBinary();
                        ^~~~~~~~~~~~~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\semphr.h(204,72): error :  expected ')' before numeric constant
    #define xSemaphoreCreateBinary() xQueueGenericCreate( ( UBaseType_t ) 1, semSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_BINARY_SEMAPHORE )
                                                                          ^
  UART_control.c(807,22): note :  in expansion of macro 'xSemaphoreCreateBinary'
    UART0_TxSemaphore = xSemaphoreCreateBinary();
                        ^~~~~~~~~~~~~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  unknown type name 'TickType_t'
    TickType_t xDummy1;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  unknown type name 'TickType_t'
    TickType_t   xDummy3;
    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
  FreeRTOS\event_groups.c(81):
FreeRTOS\include\timers.h(270,15): error :  unknown type name 'TickType_t'
           const TickType_t xTimerPeriodInTicks,
                 ^~~~~~~~~~
FreeRTOS\include\timers.h(271,15): error :  unknown type name 'UBaseType_t'
           const UBaseType_t uxAutoReload,
                 ^~~~~~~~~~~
FreeRTOS\include\semphr.h(204,35): error :  too few arguments to function 'xQueueGenericCreate'
    #define xSemaphoreCreateBinary() xQueueGenericCreate( ( UBaseType_t ) 1, semSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_BINARY_SEMAPHORE )
                                     ^
  UART_control.c(807,22): note :  in expansion of macro 'xSemaphoreCreateBinary'
    UART0_TxSemaphore = xSemaphoreCreateBinary();
                        ^~~~~~~~~~~~~~~~~~~~~~
  UART_control.c(34):
  FreeRTOS\include\queue.h(1639,16): note :  declared here
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                  ^~~~~~~~~~~~~~~~~~~
  FreeRTOS\event_groups.c(81):
FreeRTOS\include\timers.h(485,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,36): error :  'TickType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                      ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(808,2): note :  in expansion of macro 'xSemaphoreGive'
    xSemaphoreGive( UART0_TxSemaphore );
    ^~~~~~~~~~~~~~
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(808,2): note :  in expansion of macro 'xSemaphoreGive'
    xSemaphoreGive( UART0_TxSemaphore );
    ^~~~~~~~~~~~~~
FreeRTOS\include\timers.h(1228,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,32): error :  'BaseType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                  ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(808,2): note :  in expansion of macro 'xSemaphoreGive'
    xSemaphoreGive( UART0_TxSemaphore );
    ^~~~~~~~~~~~~~
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(808,2): note :  in expansion of macro 'xSemaphoreGive'
    xSemaphoreGive( UART0_TxSemaphore );
    ^~~~~~~~~~~~~~
FreeRTOS\include\timers.h(1228,120): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                                                          ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\queue.h(914,123): note :  in expansion of macro 'pdFALSE'
   #define xQueueReceive( xQueue, pvBuffer, xTicksToWait ) xQueueGenericReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWait ), pdFALSE )
                                                                                                                             ^~~~~~~
  UART_control.c(811,8): note :  in expansion of macro 'xQueueReceive'
     if ( xQueueReceive( qUART_RxQ , &receive , 2 ))
          ^~~~~~~~~~~~~
FreeRTOS\include\timers.h(1262,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\timers.h(1262,113): error :  unknown type name 'TickType_t'
   BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                   ^~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\queue.h(521,127): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )
                                                                                                                                 ^~~~~~~~~~~~~~~~~
  UART_control.c(853,7): note :  in expansion of macro 'xQueueSend'
         xQueueSend( qUART_TxQ , &input_buffer[inputs] , 2 );
         ^~~~~~~~~~
FreeRTOS\include\timers.h(1284,1): error :  unknown type name 'TickType_t'
   TickType_t xTimerGetPeriod( TimerHandle_t xTimer ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(35):
UART_control.c(897,61): error :  expected ')' before numeric constant
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                               ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(897,12): note :  in expansion of macro 'xSemaphoreTake'
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
              ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(897,69): note :  in expansion of macro 'pdTRUE'
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                                       ^~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(904,9): note :  in expansion of macro 'xSemaphoreGive'
           xSemaphoreGive( UART0_TxSemaphore );
           ^~~~~~~~~~~~~~
FreeRTOS\include\timers.h(1299,1): error :  unknown type name 'TickType_t'
   TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(904,9): note :  in expansion of macro 'xSemaphoreGive'
           xSemaphoreGive( UART0_TxSemaphore );
           ^~~~~~~~~~~~~~
  UART_control.c(35):
UART_control.c(907,61): error :  expected ')' before numeric constant
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                               ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(907,12): note :  in expansion of macro 'xSemaphoreTake'
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
              ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(907,69): note :  in expansion of macro 'pdTRUE'
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                                       ^~~~~~
FreeRTOS\include\timers.h(1305,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerCreateTimerTask( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(910,9): note :  in expansion of macro 'xSemaphoreGive'
           xSemaphoreGive( UART0_TxSemaphore );
           ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(910,9): note :  in expansion of macro 'xSemaphoreGive'
           xSemaphoreGive( UART0_TxSemaphore );
           ^~~~~~~~~~~~~~
  UART_control.c(35):
UART_control.c(915,61): error :  expected ')' before numeric constant
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                               ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(915,12): note :  in expansion of macro 'xSemaphoreTake'
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
              ^~~~~~~~~~~~~~
FreeRTOS\include\timers.h(1306,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(915,69): note :  in expansion of macro 'pdTRUE'
          if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                                       ^~~~~~
FreeRTOS\include\timers.h(1306,62): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                ^~~~~~~~~~
FreeRTOS\include\timers.h(1306,91): error :  unknown type name 'TickType_t'
   BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                             ^~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(924,9): note :  in expansion of macro 'xSemaphoreGive'
           xSemaphoreGive( UART0_TxSemaphore );
           ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(924,9): note :  in expansion of macro 'xSemaphoreGive'
           xSemaphoreGive( UART0_TxSemaphore );
           ^~~~~~~~~~~~~~
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\queue.h(521,127): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )
                                                                                                                                 ^~~~~~~~~~~~~~~~~
  UART_control.c(934,7): note :  in expansion of macro 'xQueueSend'
         xQueueSend(qUART_TxQ , &transmit , 2);
         ^~~~~~~~~~
FreeRTOS\include\timers.h(1306,118): error :  unknown type name 'BaseType_t'
   BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                        ^~~~~~~~~~
FreeRTOS\include\timers.h(1306,170): error :  unknown type name 'TickType_t'
   BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                                                                            ^~~~~~~~~~
  UART_control.c(35):
UART_control.c(976,60): error :  expected ')' before numeric constant
         if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                              ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(976,11): note :  in expansion of macro 'xSemaphoreTake'
         if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
             ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(976,68): note :  in expansion of macro 'pdTRUE'
         if (xSemaphoreTake(UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE)
                                                                      ^~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(979,8): note :  in expansion of macro 'xSemaphoreGive'
          xSemaphoreGive( UART0_TxSemaphore );
          ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(979,8): note :  in expansion of macro 'xSemaphoreGive'
          xSemaphoreGive( UART0_TxSemaphore );
          ^~~~~~~~~~~~~~
  UART_control.c(35):
UART_control.c(988,60): error :  expected ')' before numeric constant
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                              ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(988,10): note :  in expansion of macro 'xSemaphoreTake'
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
            ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(988,68): note :  in expansion of macro 'pdTRUE'
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                                      ^~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(993,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(993,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  FreeRTOS\include\task.h(78):
  FreeRTOS\queue.c(79):
FreeRTOS\include\list.h(184,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  unknown type name 'TickType_t'
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  unknown type name 'UBaseType_t'
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
  UART_control.c(35):
  UART_control.c: In function 'tUART_TxTask':
UART_control.c(1031,48): error :  'TickType_t' undeclared (first use in this function); did you mean 'TPI_Type'?
        if ( xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                  ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
UART_control.c(1031,61): error :  expected ')' before numeric constant
        if ( xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                               ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function); did you mean 'TickType_t'?
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(1031,11): note :  in expansion of macro 'xSemaphoreTake'
        if ( xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
             ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(1031,11): note :  in expansion of macro 'xSemaphoreTake'
        if ( xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
             ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(1031,69): note :  in expansion of macro 'pdTRUE'
        if ( xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                                       ^~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(1034,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(1034,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  UART_control.c(35):
UART_control.c(1039,60): error :  expected ')' before numeric constant
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                              ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(1039,10): note :  in expansion of macro 'xSemaphoreTake'
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
            ^~~~~~~~~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(1039,68): note :  in expansion of macro 'pdTRUE'
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                                      ^~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(1042,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(1042,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  UART_control.c(35):
UART_control.c(1047,60): error :  expected ')' before numeric constant
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                              ^
  FreeRTOS\include\semphr.h(331,115): note :  in definition of macro 'xSemaphoreTake'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                     ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\semphr.h(331,129): note :  in expansion of macro 'pdFALSE'
   #define xSemaphoreTake( xSemaphore, xBlockTime )  xQueueGenericReceive( ( QueueHandle_t ) ( xSemaphore ), NULL, ( xBlockTime ), pdFALSE )
                                                                                                                                   ^~~~~~~
  UART_control.c(1047,10): note :  in expansion of macro 'xSemaphoreTake'
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
            ^~~~~~~~~~~~~~
  FreeRTOS\queue.c(79):
FreeRTOS\include\task.h(109,21): error :  expected declaration specifiers or '...' before '*' token
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                       ^
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  UART_control.c(1047,68): note :  in expansion of macro 'pdTRUE'
        if (xSemaphoreTake( UART0_TxSemaphore, ( TickType_t ) 10 ) == pdTRUE )
                                                                      ^~~~~~
  FreeRTOS\queue.c(79):
FreeRTOS\include\task.h(137,2): error :  unknown type name 'BaseType_t'
    BaseType_t xOverflowCount;
    ^~~~~~~~~~
FreeRTOS\include\task.h(138,2): error :  unknown type name 'TickType_t'
    TickType_t xTimeOnEntering;
    ^~~~~~~~~~
FreeRTOS\include\task.h(160,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxPriority;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(161,2): error :  unknown type name 'StackType_t'
    StackType_t *puxStackBuffer;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(171,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t xTaskNumber;  /* A number unique to the task. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(173,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxCurrentPriority; /* The priority at which the task was running (may be inherited) when the structure was populated. */
    ^~~~~~~~~~~
FreeRTOS\include\task.h(174,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxBasePriority;  /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
    ^~~~~~~~~~~
  FreeRTOS\queue.c(79):
FreeRTOS\include\task.h(176,2): error :  unknown type name 'StackType_t'
    StackType_t *pxStackBase;  /* Points to the lowest address of the task's stack area. */
    ^~~~~~~~~~~
  UART_control.c(35):
FreeRTOS\include\semphr.h(83,49): error :  expected ')' before numeric constant
   #define semGIVE_BLOCK_TIME     ( ( TickType_t ) 0U )
                                                   ^
  FreeRTOS\include\semphr.h(489,98): note :  in expansion of macro 'semGIVE_BLOCK_TIME'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                    ^~~~~~~~~~~~~~~~~~
  UART_control.c(1050,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  UART_control.c(34):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\include\semphr.h(489,118): note :  in expansion of macro 'queueSEND_TO_BACK'
   #define xSemaphoreGive( xSemaphore )  xQueueGenericSend( ( QueueHandle_t ) ( xSemaphore ), NULL, semGIVE_BLOCK_TIME, queueSEND_TO_BACK )
                                                                                                                        ^~~~~~~~~~~~~~~~~
  UART_control.c(1050,7): note :  in expansion of macro 'xSemaphoreGive'
         xSemaphoreGive( UART0_TxSemaphore );
         ^~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  UART_control.c(32):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\queue.h(914,123): note :  in expansion of macro 'pdFALSE'
   #define xQueueReceive( xQueue, pvBuffer, xTicksToWait ) xQueueGenericReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWait ), pdFALSE )
                                                                                                                             ^~~~~~~
  UART_control.c(1058,7): note :  in expansion of macro 'xQueueReceive'
     if (xQueueReceive( qUART_TxQ , &receive , 2 ) )
         ^~~~~~~~~~~~~
FreeRTOS\include\task.h(360,2): error :  unknown type name 'BaseType_t'
    BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
    ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(104):
  Programs_file.h(22):
  main.cpp(23):
FreeRTOS\include\portable.h(144,2): error :  'StackType_t' does not name a type
    StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters ) PRIVILEGED_FUNCTION;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(364,8): error :  unknown type name 'UBaseType_t'
          UBaseType_t uxPriority,
          ^~~~~~~~~~~
FreeRTOS\include\task.h(695,24): error :  unknown type name 'TickType_t'
   void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
                          ^~~~~~~~~~
  FreeRTOS\event_groups.c(82):
FreeRTOS\include\event_groups.h(133,9): error :  unknown type name 'TickType_t'
   typedef TickType_t EventBits_t;
           ^~~~~~~~~~
FreeRTOS\include\event_groups.h(336,107): error :  unknown type name 'BaseType_t'
   EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                             ^~~~~~~~~~
  FreeRTOS\event_groups.c(82):
FreeRTOS\include\event_groups.h(336,138): error :  unknown type name 'BaseType_t'
   EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                                            ^~~~~~~~~~
FreeRTOS\include\portable.h(181,1): error :  'BaseType_t' does not name a type
   BaseType_t xPortStartScheduler( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\event_groups.h(336,166): error :  unknown type name 'TickType_t'
   EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                                                                        ^~~~~~~~~~
FreeRTOS\include\task.h(754,23): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
FreeRTOS\include\task.h(754,68): error :  unknown type name 'TickType_t'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\event_groups.h(730,128): error :  unknown type name 'TickType_t'
   EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const EventBits_t uxBitsToWaitFor, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                                  ^~~~~~~~~~
FreeRTOS\include\task.h(779,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskAbortDelay( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  Programs_file.h(22):
  main.cpp(23):
FreeRTOS\include\FreeRTOS.h(876,2): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
    TickType_t xDummy1;
    ^~~~~~~~~~
    TPI_Type
FreeRTOS\event_groups.c(129,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits ) PRIVILEGED_FUNCTION;
          ^~~~~~~~~~
FreeRTOS\event_groups.c(129,120): error :  unknown type name 'BaseType_t'
   static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits ) PRIVILEGED_FUNCTION;
                                                                                                                          ^~~~~~~~~~
FreeRTOS\include\task.h(826,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\event_groups.c(208,128): error :  unknown type name 'TickType_t'
   EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const EventBits_t uxBitsToWaitFor, TickType_t xTicksToWait )
                                                                                                                                  ^~~~~~~~~~
FreeRTOS\event_groups.c(324,107): error :  unknown type name 'BaseType_t'
   EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait )
                                                                                                             ^~~~~~~~~~
FreeRTOS\event_groups.c(324,138): error :  unknown type name 'BaseType_t'
   EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait )
                                                                                                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(834,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(884,2): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
    TickType_t xDummy1;
    ^~~~~~~~~~
    TPI_Type
FreeRTOS\event_groups.c(324,166): error :  unknown type name 'TickType_t'
   EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait )
                                                                                                                                                                        ^~~~~~~~~~
FreeRTOS\include\task.h(908,68): error :  unknown type name 'BaseType_t'
   void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
  FreeRTOS/event_groups.c: In function 'xEventGroupGetBitsFromISR':
FreeRTOS\event_groups.c(516,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxSavedInterruptStatus;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(950,44): error :  unknown type name 'UBaseType_t'
   void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) PRIVILEGED_FUNCTION;
                                              ^~~~~~~~~~~
  FreeRTOS/event_groups.c: In function 'xEventGroupSetBits':
FreeRTOS\event_groups.c(537,1): error :  unknown type name 'BaseType_t'
   BaseType_t xMatchFound = pdFALSE;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1079,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1273,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskResumeAll( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\event_groups.c(79):
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function)
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\event_groups.c(537,26): note :  in expansion of macro 'pdFALSE'
   BaseType_t xMatchFound = pdFALSE;
                            ^~~~~~~
  FreeRTOS\include\projdefs.h(86,23): note :  each undeclared identifier is reported only once for each function it appears in
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\event_groups.c(537,26): note :  in expansion of macro 'pdFALSE'
   BaseType_t xMatchFound = pdFALSE;
                            ^~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\event_groups.c(537,26): note :  in expansion of macro 'pdFALSE'
   BaseType_t xMatchFound = pdFALSE;
                            ^~~~~~~
FreeRTOS\include\FreeRTOS.h(892,2): error :  'UBaseType_t' does not name a type
    UBaseType_t uxDummy1;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(1288,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCount( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\event_groups.c(560,18): note :  in expansion of macro 'pdFALSE'
      xMatchFound = pdFALSE;
                    ^~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\event_groups.c(571,20): note :  in expansion of macro 'pdTRUE'
        xMatchFound = pdTRUE;
                      ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\event_groups.c(581,19): note :  in expansion of macro 'pdTRUE'
       xMatchFound = pdTRUE;
                     ^~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\event_groups.c(588,23): note :  in expansion of macro 'pdFALSE'
      if( xMatchFound != pdFALSE )
                         ^~~~~~~
FreeRTOS\include\task.h(1304,1): error :  unknown type name 'TickType_t'
   TickType_t xTaskGetTickCountFromISR( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS/event_groups.c: In function 'vEventGroupDelete':
FreeRTOS\event_groups.c(633,63): error :  'UBaseType_t' undeclared (first use in this function)
     while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
                                                                 ^~~~~~~~~~~
FreeRTOS\event_groups.c(633,77): error :  expected ')' before numeric constant
     while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
                                                                               ^
FreeRTOS\include\task.h(1318,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetNumberOfTasks( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  FreeRTOS/event_groups.c: At top level:
FreeRTOS\event_groups.c(682,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits )
          ^~~~~~~~~~
FreeRTOS\event_groups.c(682,120): error :  unknown type name 'BaseType_t'
   static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits )
                                                                                                                          ^~~~~~~~~~
  FreeRTOS/event_groups.c: In function 'prvTestWaitCondition':
FreeRTOS\event_groups.c(684,1): error :  unknown type name 'BaseType_t'
   BaseType_t xWaitConditionMet = pdFALSE;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1368,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\event_groups.c(79):
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function)
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\event_groups.c(684,32): note :  in expansion of macro 'pdFALSE'
   BaseType_t xWaitConditionMet = pdFALSE;
                                  ^~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\event_groups.c(684,32): note :  in expansion of macro 'pdFALSE'
   BaseType_t xWaitConditionMet = pdFALSE;
                                  ^~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\event_groups.c(686,25): note :  in expansion of macro 'pdFALSE'
    if( xWaitForAllBits == pdFALSE )
                           ^~~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\event_groups.c(692,24): note :  in expansion of macro 'pdTRUE'
      xWaitConditionMet = pdTRUE;
                          ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\event_groups.c(705,24): note :  in expansion of macro 'pdTRUE'
      xWaitConditionMet = pdTRUE;
                          ^~~~~~
FreeRTOS\include\FreeRTOS.h(917,2): error :  'UBaseType_t' does not name a type
FreeRTOS\include\task.h(1421,1): error :  unknown type name 'BaseType_t'
    UBaseType_t   uxDummy5;
    ^~~~~~~~~~~
   BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1529,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1529,81): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
                                                                                   ^~~~~~~~~~~
FreeRTOS\include\task.h(1711,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,148): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(1879,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,122): error :  unknown type name 'TickType_t'
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                                            ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(930,3): error :  'UBaseType_t' does not name a type
     UBaseType_t  uxDummy12[ 2 ];
     ^~~~~~~~~~~
FreeRTOS\include\task.h(1980,58): error :  unknown type name 'BaseType_t'
   void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2049,28): error :  unknown type name 'BaseType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                              ^~~~~~~~~~
FreeRTOS\include\task.h(2049,58): error :  unknown type name 'TickType_t'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2065,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );
   ^~~~~~~~~~
FreeRTOS\include\task.h(2086,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskIncrementTick( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2119,63): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2120,66): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                    ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(975,3): error :  'UBaseType_t' does not name a type
     UBaseType_t uxDummy2;
     ^~~~~~~~~~~
FreeRTOS\include\task.h(2120,95): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2133,67): error :  unknown type name 'TickType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(2133,98): error :  unknown type name 'BaseType_t'
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2159,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(979,2): error :  'UBaseType_t' does not name a type
    UBaseType_t uxDummy4[ 3 ];
    ^~~~~~~~~~~
FreeRTOS\include\task.h(2160,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,83): error :  unknown type name 'TickType_t'
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
                                                                                     ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1014,2): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
    TickType_t xDummy1;
    ^~~~~~~~~~
    TPI_Type
FreeRTOS\include\task.h(2176,1): error :  unknown type name 'TickType_t'
   TickType_t uxTaskResetEventItemValue( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2192,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1045,2): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
    TickType_t   xDummy3;
    ^~~~~~~~~~
    TPI_Type
FreeRTOS\include\task.h(2192,63): error :  unknown type name 'TickType_t'
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
FreeRTOS\include\task.h(2204,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskGetSchedulerState( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2216,1): error :  unknown type name 'BaseType_t'
   BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\FreeRTOS.h(1046,2): error :  'UBaseType_t' does not name a type
    UBaseType_t   uxDummy4;
    ^~~~~~~~~~~
FreeRTOS\include\task.h(2221,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2227,52): error :  unknown type name 'UBaseType_t'
   void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\task.h(2237,27): error :  unknown type name 'TickType_t'
   void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
                             ^~~~~~~~~~
  Programs_file.h(23):
  main.cpp(23):
FreeRTOS\include\queue.h(692,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(821,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue, void * const pvBuffer ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1013,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
  FreeRTOS\queue.c(80):
FreeRTOS\include\queue.h(692,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(692,87): error :  unknown type name 'TickType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                         ^~~~~~~~~~
FreeRTOS\include\queue.h(692,118): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                                        ^~~~~~~~~~
FreeRTOS\include\queue.h(1028,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(821,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue, void * const pvBuffer ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1013,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1013,79): error :  unknown type name 'TickType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
FreeRTOS\include\queue.h(1013,110): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) PRIVILEGED_FUNCTION;
                                                                                                                ^~~~~~~~~~
FreeRTOS\include\queue.h(1045,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1028,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1045,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1440,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1440,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1440,94): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                ^~~~~~~~~~
FreeRTOS\include\queue.h(1440,146): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
                                                                                                                                                    ^~~~~~~~~~
FreeRTOS\include\queue.h(1441,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1441,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1441,53): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                       ^~~~~~~~~~
FreeRTOS\include\queue.h(1530,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1530,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1530,79): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
FreeRTOS\include\queue.h(1536,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1537,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1536,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1538,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1549,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1537,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1549,82): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
                                                                                    ^~~~~~~~~~
FreeRTOS\include\queue.h(1550,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1550,74): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
                                                                            ^~~~~~~~~~
FreeRTOS\include\queue.h(1551,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1551,75): error :  unknown type name 'TickType_t'
   BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
                                                                             ^~~~~~~~~~
FreeRTOS\include\queue.h(1538,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1552,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1552,67): error :  unknown type name 'TickType_t'
   BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );
                                                                     ^~~~~~~~~~
FreeRTOS\include\queue.h(1561,52): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\queue.h(1561,82): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                                                    ^~~~~~~~~~~
FreeRTOS\include\queue.h(1562,58): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~~
FreeRTOS\include\queue.h(1562,88): error :  unknown type name 'UBaseType_t'
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                                                          ^~~~~~~~~~~
FreeRTOS\include\queue.h(1549,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1569,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1569,60): error :  unknown type name 'TickType_t'
   BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                              ^~~~~~~~~~
FreeRTOS\include\queue.h(1570,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveMutexRecursive( QueueHandle_t pxMutex ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1639,43): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                             ^~~~~~~~~~~
FreeRTOS\include\queue.h(1639,76): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                                                              ^~~~~~~~~~~
FreeRTOS\include\queue.h(1699,41): error :  unknown type name 'UBaseType_t'
   QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength ) PRIVILEGED_FUNCTION;
                                           ^~~~~~~~~~~
FreeRTOS\include\queue.h(1723,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1742,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1778,79): error :  unknown type name 'TickType_t'
   QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
FreeRTOS\include\queue.h(1550,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1786,60): error :  unknown type name 'TickType_t'
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                              ^~~~~~~~~~
FreeRTOS\include\queue.h(1786,91): error :  unknown type name 'BaseType_t'
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                             ^~~~~~~~~~
FreeRTOS\include\queue.h(1787,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1787,54): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) PRIVILEGED_FUNCTION;
                                                        ^~~~~~~~~~
FreeRTOS\include\queue.h(1551,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1788,50): error :  unknown type name 'UBaseType_t'
   void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber ) PRIVILEGED_FUNCTION;
                                                    ^~~~~~~~~~~
FreeRTOS\include\queue.h(1789,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\queue.h(1552,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );
   ^~~~~~~~~~
FreeRTOS\queue.c(139,3): error :  unknown type name 'UBaseType_t'
     UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex has been recursively 'taken' when the structure is used as a mutex. */
     ^~~~~~~~~~~
FreeRTOS\queue.c(145,11): error :  unknown type name 'UBaseType_t'
    volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
             ^~~~~~~~~~~
FreeRTOS\queue.c(146,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxLength;   /*< The length of the queue defined as the number of items it will hold, not the number of bytes. */
    ^~~~~~~~~~~
FreeRTOS\queue.c(147,2): error :  unknown type name 'UBaseType_t'
    UBaseType_t uxItemSize;   /*< The size of each items that the queue will hold. */
    ^~~~~~~~~~~
FreeRTOS\queue.c(215,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
          ^~~~~~~~~~
FreeRTOS\queue.c(222,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
          ^~~~~~~~~~
FreeRTOS\queue.c(228,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition ) PRIVILEGED_FUNCTION;
          ^~~~~~~~~~
FreeRTOS\queue.c(228,97): error :  unknown type name 'BaseType_t'
   static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition ) PRIVILEGED_FUNCTION;
                                                                                                   ^~~~~~~~~~
FreeRTOS\queue.c(247,42): error :  unknown type name 'UBaseType_t'
   static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
                                            ^~~~~~~~~~~
FreeRTOS\queue.c(247,75): error :  unknown type name 'UBaseType_t'
   static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
                                                                             ^~~~~~~~~~~
FreeRTOS\queue.c(279,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
   ^~~~~~~~~~
FreeRTOS\queue.c(279,54): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
                                                        ^~~~~~~~~~
FreeRTOS\include\queue.h(1561,52): error :  'UBaseType_t' does not name a type
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\queue.c(386,43): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType )
                                             ^~~~~~~~~~~
FreeRTOS\queue.c(386,76): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType )
                                                                              ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(98):
  FreeRTOS\queue.c(78):
  FreeRTOS/queue.c: In function 'xQueueGenericCreate':
FreeRTOS\queue.c(392,35): error :  'UBaseType_t' undeclared (first use in this function)
     configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
                                     ^
  FreeRTOS\FreeRTOSConfig.h(157,33): note :  in definition of macro 'configASSERT'
   #define configASSERT( x ) if( ( x ) == 0 ) { taskDISABLE_INTERRUPTS(); for( ;; ); }
                                   ^
  FreeRTOS\queue.c(392,35): note :  each undeclared identifier is reported only once for each function it appears in
     configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
                                     ^
  FreeRTOS\FreeRTOSConfig.h(157,33): note :  in definition of macro 'configASSERT'
   #define configASSERT( x ) if( ( x ) == 0 ) { taskDISABLE_INTERRUPTS(); for( ;; ); }
                                   ^
FreeRTOS\queue.c(392,49): error :  expected ')' before numeric constant
     configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
                                                   ^
  FreeRTOS\FreeRTOSConfig.h(157,33): note :  in definition of macro 'configASSERT'
   #define configASSERT( x ) if( ( x ) == 0 ) { taskDISABLE_INTERRUPTS(); for( ;; ); }
                                   ^
FreeRTOS\queue.c(394,37): error :  expected ')' before numeric constant
     if( uxItemSize == ( UBaseType_t ) 0 )
                                       ^
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(432,42): error :  unknown type name 'UBaseType_t'
   static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue )
                                            ^~~~~~~~~~~
FreeRTOS\queue.c(432,75): error :  unknown type name 'UBaseType_t'
   static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue )
                                                                             ^~~~~~~~~~~
FreeRTOS\include\queue.h(1561,82): error :  'UBaseType_t' does not name a type
   QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
                                                                                    ^~~~~~~~~~~
  FreeRTOS/queue.c: In function 'prvInitialiseNewQueue':
FreeRTOS\queue.c(438,22): error :  'UBaseType_t' undeclared (first use in this function)
    if( uxItemSize == ( UBaseType_t ) 0 )
                        ^~~~~~~~~~~
FreeRTOS\queue.c(438,36): error :  expected ')' before numeric constant
    if( uxItemSize == ( UBaseType_t ) 0 )
                                      ^
FreeRTOS\include\queue.h(1562,58): error :  'UBaseType_t' does not name a type
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~~
FreeRTOS\queue.c(456,11): warning :  implicit declaration of function 'xQueueGenericReset'; did you mean 'xQueueGenericCreate'? [-Wimplicit-function-declaration]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
             ^~~~~~~~~~~~~~~~~~
             xQueueGenericCreate
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(87,22): error :  'BaseType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define pdTRUE   ( ( BaseType_t ) 1 )
                        ^
  FreeRTOS\queue.c(456,43): note :  in expansion of macro 'pdTRUE'
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
                                             ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\queue.c(456,43): note :  in expansion of macro 'pdTRUE'
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
                                             ^~~~~~
FreeRTOS\include\queue.h(1562,88): error :  'UBaseType_t' does not name a type
   QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) PRIVILEGED_FUNCTION;
                                                                                          ^~~~~~~~~~~
  FreeRTOS/queue.c: In function 'prvInitialiseMutex':
FreeRTOS\queue.c(493,13): warning :  implicit declaration of function 'xQueueGenericSend'; did you mean 'xQueueGenericCreate'? [-Wimplicit-function-declaration]
      ( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
               ^~~~~~~~~~~~~~~~~
               xQueueGenericCreate
FreeRTOS\include\queue.h(1569,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\queue.c(493,52): error :  'TickType_t' undeclared (first use in this function)
      ( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
                                                      ^~~~~~~~~~
FreeRTOS\queue.c(493,65): error :  expected ')' before numeric constant
      ( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
                                                                   ^~
  FreeRTOS/queue.c: In function 'xQueueCreateMutex':
FreeRTOS\queue.c(509,8): error :  unknown type name 'UBaseType_t'
    const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
          ^~~~~~~~~~~
FreeRTOS\include\queue.h(1570,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueGiveMutexRecursive( QueueHandle_t pxMutex ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\queue.c(509,38): error :  'UBaseType_t' undeclared (first use in this function)
    const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
                                        ^~~~~~~~~~~
FreeRTOS\queue.c(509,52): error :  expected ',' or ';' before numeric constant
    const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
                                                      ^
FreeRTOS\queue.c(511,66): error :  'uxMutexSize' undeclared (first use in this function); did you mean 'uxMutexLength'?
     pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
                                                                    ^~~~~~~~~~~
                                                                    uxMutexLength
FreeRTOS\include\queue.h(1639,43): error :  'UBaseType_t' does not name a type
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                             ^~~~~~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(572,2): error :  unknown type name 'BaseType_t'
    BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
    ^~~~~~~~~~
  FreeRTOS/queue.c: In function 'xQueueGiveMutexRecursive':
FreeRTOS\queue.c(574,2): error :  unknown type name 'BaseType_t'
    BaseType_t xReturn;
    ^~~~~~~~~~
FreeRTOS\queue.c(597,45): error :  'UBaseType_t' undeclared (first use in this function)
      if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
                                               ^~~~~~~~~~~
FreeRTOS\queue.c(597,59): error :  expected ')' before numeric constant
      if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
                                                             ^
FreeRTOS\include\queue.h(1639,76): error :  'UBaseType_t' does not name a type
    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
                                                                              ^~~~~~~~~~~
FreeRTOS\queue.c(115,42): error :  'TickType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define queueMUTEX_GIVE_BLOCK_TIME   ( ( TickType_t ) 0U )
                                            ^
  FreeRTOS\queue.c(601,48): note :  in expansion of macro 'queueMUTEX_GIVE_BLOCK_TIME'
       ( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
FreeRTOS\queue.c(115,55): error :  expected ')' before numeric constant
   #define queueMUTEX_GIVE_BLOCK_TIME   ( ( TickType_t ) 0U )
                                                         ^
  FreeRTOS\queue.c(601,48): note :  in expansion of macro 'queueMUTEX_GIVE_BLOCK_TIME'
       ( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  FreeRTOS\queue.c(80):
FreeRTOS\include\queue.h(105,32): error :  'BaseType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                  ^
  FreeRTOS\queue.c(601,76): note :  in expansion of macro 'queueSEND_TO_BACK'
       ( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
                                                                              ^~~~~~~~~~~~~~~~~
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\queue.c(601,76): note :  in expansion of macro 'queueSEND_TO_BACK'
       ( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
                                                                              ^~~~~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\include\projdefs.h(89,20): note :  in expansion of macro 'pdTRUE'
   #define pdPASS   ( pdTRUE )
                      ^~~~~~
  FreeRTOS\queue.c(608,14): note :  in expansion of macro 'pdPASS'
      xReturn = pdPASS;
                ^~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\projdefs.h(90,20): note :  in expansion of macro 'pdFALSE'
   #define pdFAIL   ( pdFALSE )
                      ^~~~~~~
  FreeRTOS\queue.c(614,14): note :  in expansion of macro 'pdFAIL'
      xReturn = pdFAIL;
                ^~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(627,2): error :  unknown type name 'BaseType_t'
    BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
    ^~~~~~~~~~
FreeRTOS\queue.c(627,61): error :  unknown type name 'TickType_t'
    BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
                                                               ^~~~~~~~~~
FreeRTOS\queue.c(697,53): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount )
                                                       ^~~~~~~~~~~
FreeRTOS\queue.c(697,83): error :  unknown type name 'UBaseType_t'
    QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount )
                                                                                     ^~~~~~~~~~~
  FreeRTOS/queue.c: In function 'xQueueCreateCountingSemaphore':
FreeRTOS\queue.c(114,46): error :  'UBaseType_t' undeclared (first use in this function)
   #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
                                                ^
  FreeRTOS\queue.c(704,46): note :  in expansion of macro 'queueSEMAPHORE_QUEUE_ITEM_LENGTH'
     xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
FreeRTOS\queue.c(114,60): error :  expected ')' before numeric constant
   #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
                                                              ^
  FreeRTOS\queue.c(704,46): note :  in expansion of macro 'queueSEMAPHORE_QUEUE_ITEM_LENGTH'
     xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
FreeRTOS\include\queue.h(1699,41): error :  'UBaseType_t' does not name a type
   QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength ) PRIVILEGED_FUNCTION;
                                           ^~~~~~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(723,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition )
   ^~~~~~~~~~
FreeRTOS\queue.c(723,87): error :  unknown type name 'TickType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition )
                                                                                         ^~~~~~~~~~
FreeRTOS\queue.c(723,118): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition )
                                                                                                                        ^~~~~~~~~~
FreeRTOS\include\queue.h(1723,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\queue.c(921,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition )
   ^~~~~~~~~~
FreeRTOS\queue.c(921,94): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition )
                                                                                                ^~~~~~~~~~
FreeRTOS\queue.c(921,146): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition )
                                                                                                                                                    ^~~~~~~~~~
FreeRTOS\queue.c(1072,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1742,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\queue.c(1072,53): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
                                                       ^~~~~~~~~~
FreeRTOS\queue.c(1237,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeeking )
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1778,79): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                 ^~~~~~~~~~
                                                                                 TPI_Type
FreeRTOS\include\queue.h(1786,60): error :  'TickType_t' has not been declared
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                              ^~~~~~~~~~
FreeRTOS\queue.c(1237,79): error :  unknown type name 'TickType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeeking )
                                                                                 ^~~~~~~~~~
FreeRTOS\queue.c(1237,110): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeeking )
                                                                                                                ^~~~~~~~~~
FreeRTOS\include\queue.h(1786,91): error :  'BaseType_t' does not name a type
   void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                             ^~~~~~~~~~
FreeRTOS\queue.c(1434,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken )
   ^~~~~~~~~~
FreeRTOS\queue.c(1434,79): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken )
                                                                                 ^~~~~~~~~~
FreeRTOS\include\queue.h(1787,1): error :  'BaseType_t' does not name a type
   BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1788,50): error :  'UBaseType_t' has not been declared
   void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber ) PRIVILEGED_FUNCTION;
                                                    ^~~~~~~~~~~
FreeRTOS\queue.c(1525,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
   ^~~~~~~~~~
  FreeRTOS/queue.c: In function 'xQueuePeekFromISR':
FreeRTOS\queue.c(1527,1): error :  unknown type name 'BaseType_t'
   BaseType_t xReturn;
   ^~~~~~~~~~
FreeRTOS\include\queue.h(1789,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\queue.c(1528,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxSavedInterruptStatus;
   ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(98):
  FreeRTOS\queue.c(78):
FreeRTOS\queue.c(1533,70): error :  'UBaseType_t' undeclared (first use in this function)
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
                                                                        ^
  FreeRTOS\FreeRTOSConfig.h(157,33): note :  in definition of macro 'configASSERT'
   #define configASSERT( x ) if( ( x ) == 0 ) { taskDISABLE_INTERRUPTS(); for( ;; ); }
                                   ^
FreeRTOS\queue.c(1533,84): error :  expected ')' before numeric constant
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
                                                                                      ^
  FreeRTOS\FreeRTOSConfig.h(157,33): note :  in definition of macro 'configASSERT'
   #define configASSERT( x ) if( ( x ) == 0 ) { taskDISABLE_INTERRUPTS(); for( ;; ); }
                                   ^
FreeRTOS\queue.c(1555,52): error :  expected ')' before numeric constant
     if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
                                                      ^
  FreeRTOS\include\task.h(78):
  LED_control.h(25):
  main.cpp(24):
FreeRTOS\include\list.h(184,22): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
    configLIST_VOLATILE TickType_t xItemValue;   /*< The value being listed.  In most cases this is used to sort the list in descending order. */
                        ^~~~~~~~~~
                        TPI_Type
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(87,22): error :  'BaseType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define pdTRUE   ( ( BaseType_t ) 1 )
                        ^
  FreeRTOS\include\projdefs.h(89,20): note :  in expansion of macro 'pdTRUE'
   #define pdPASS   ( pdTRUE )
                      ^~~~~~
  FreeRTOS\queue.c(1565,14): note :  in expansion of macro 'pdPASS'
      xReturn = pdPASS;
                ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\include\projdefs.h(89,20): note :  in expansion of macro 'pdTRUE'
   #define pdPASS   ( pdTRUE )
                      ^~~~~~
  FreeRTOS\queue.c(1565,14): note :  in expansion of macro 'pdPASS'
      xReturn = pdPASS;
                ^~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\include\projdefs.h(90,20): note :  in expansion of macro 'pdFALSE'
   #define pdFAIL   ( pdFALSE )
                      ^~~~~~~
  FreeRTOS\queue.c(1569,14): note :  in expansion of macro 'pdFAIL'
      xReturn = pdFAIL;
                ^~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1579,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
   ^~~~~~~~~~~
FreeRTOS\include\list.h(196,22): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
    configLIST_VOLATILE TickType_t xItemValue;
                        ^~~~~~~~~~
                        TPI_Type
  FreeRTOS/queue.c: In function 'uxQueueMessagesWaiting':
FreeRTOS\queue.c(1581,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxReturn;
   ^~~~~~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1595,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
   ^~~~~~~~~~~
  FreeRTOS/queue.c: In function 'uxQueueSpacesAvailable':
FreeRTOS\queue.c(1597,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxReturn;
   ^~~~~~~~~~~
FreeRTOS\include\list.h(208,22): error :  'UBaseType_t' does not name a type
    configLIST_VOLATILE UBaseType_t uxNumberOfItems;
                        ^~~~~~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1613,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
   ^~~~~~~~~~~
  FreeRTOS/queue.c: In function 'uxQueueMessagesWaitingFromISR':
FreeRTOS\queue.c(1615,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxReturn;
   ^~~~~~~~~~~
  FreeRTOS/queue.c: In function 'vQueueDelete':
FreeRTOS\queue.c(1641,12): error :  stray '\275' in program
     again. */�
              ^
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1697,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
          ^~~~~~~~~~
FreeRTOS\include\list.h(446,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\queue.c(1697,97): error :  unknown type name 'BaseType_t'
   static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
                                                                                                   ^~~~~~~~~~
  LED_control.h(25):
  main.cpp(24):
FreeRTOS\include\task.h(109,20): error :  ISO C++ forbids declaration of 'BaseType_t' with no type [-fpermissive]
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                      ^
FreeRTOS\include\task.h(109,20): error :  typedef 'BaseType_t' is initialized (use decltype instead)
FreeRTOS\include\task.h(109,22): error :  'TaskHookFunction_t' was not declared in this scope
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                        ^~~~~~~~~~~~~~~~~~
  FreeRTOS/queue.c: In function 'prvCopyDataToQueue':
FreeRTOS\queue.c(1699,1): error :  unknown type name 'BaseType_t'
   BaseType_t xReturn = pdFALSE;
   ^~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(86,23): error :  'BaseType_t' undeclared (first use in this function)
   #define pdFALSE   ( ( BaseType_t ) 0 )
                         ^
  FreeRTOS\queue.c(1699,22): note :  in expansion of macro 'pdFALSE'
   BaseType_t xReturn = pdFALSE;
                        ^~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1699,22): note :  in expansion of macro 'pdFALSE'
   BaseType_t xReturn = pdFALSE;
                        ^~~~~~~
  FreeRTOS\include\task.h(109,22): note :  suggested alternative: 'TaskFunction_t'
   typedef BaseType_t (*TaskHookFunction_t)( void * );
                        ^~~~~~~~~~~~~~~~~~
                        TaskFunction_t
FreeRTOS\queue.c(1700,1): error :  unknown type name 'UBaseType_t'
   UBaseType_t uxMessagesWaiting;
   ^~~~~~~~~~~
FreeRTOS\queue.c(1706,31): error :  'UBaseType_t' undeclared (first use in this function); did you mean 'BaseType_t'?
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
                                 ^~~~~~~~~~~
                                 BaseType_t
FreeRTOS\queue.c(1706,45): error :  expected ')' before numeric constant
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
                                               ^
  FreeRTOS\queue.c(80):
FreeRTOS\include\queue.h(105,45): error :  expected ')' before numeric constant
   #define queueSEND_TO_BACK  ( ( BaseType_t ) 0 )
                                               ^
  FreeRTOS\queue.c(1723,24): note :  in expansion of macro 'queueSEND_TO_BACK'
    else if( xPosition == queueSEND_TO_BACK )
                          ^~~~~~~~~~~~~~~~~
FreeRTOS\include\queue.h(107,43): error :  expected ')' before numeric constant
   #define queueOVERWRITE   ( ( BaseType_t ) 2 )
                                             ^
  FreeRTOS\queue.c(1749,20): note :  in expansion of macro 'queueOVERWRITE'
     if( xPosition == queueOVERWRITE )
                      ^~~~~~~~~~~~~~
FreeRTOS\queue.c(1751,44): error :  expected ')' before numeric constant
      if( uxMessagesWaiting > ( UBaseType_t ) 0 )
                                              ^
  LED_control.h(25):
  main.cpp(24):
FreeRTOS\include\task.h(137,2): error :  'BaseType_t' does not name a type
    BaseType_t xOverflowCount;
    ^~~~~~~~~~
  FreeRTOS/queue.c: In function 'prvCopyDataFromQueue':
FreeRTOS\queue.c(1778,31): error :  'UBaseType_t' undeclared (first use in this function)
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
                                 ^~~~~~~~~~~
FreeRTOS\queue.c(1778,45): error :  expected ')' before numeric constant
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
                                               ^
FreeRTOS\include\task.h(138,2): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
    TickType_t xTimeOnEntering;
    ^~~~~~~~~~
    TPI_Type
  FreeRTOS\include\task.h(78):
  FreeRTOS\queue.c(79):
  FreeRTOS/queue.c: In function 'prvUnlockQueue':
FreeRTOS\include\list.h(291,41): error :  'BaseType_t' undeclared (first use in this function)
   #define listLIST_IS_EMPTY( pxList ) ( ( BaseType_t ) ( ( pxList )->uxNumberOfItems == ( UBaseType_t ) 0 ) )
                                           ^
  FreeRTOS\queue.c(1855,9): note :  in expansion of macro 'listLIST_IS_EMPTY'
       if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
           ^~~~~~~~~~~~~~~~~
FreeRTOS\include\list.h(291,89): error :  'UBaseType_t' undeclared (first use in this function); did you mean 'BaseType_t'?
   #define listLIST_IS_EMPTY( pxList ) ( ( BaseType_t ) ( ( pxList )->uxNumberOfItems == ( UBaseType_t ) 0 ) )
                                                                                           ^
  FreeRTOS\queue.c(1855,9): note :  in expansion of macro 'listLIST_IS_EMPTY'
       if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
           ^~~~~~~~~~~~~~~~~
FreeRTOS\include\list.h(291,103): error :  expected ')' before numeric constant
   #define listLIST_IS_EMPTY( pxList ) ( ( BaseType_t ) ( ( pxList )->uxNumberOfItems == ( UBaseType_t ) 0 ) )
                                                                                                         ^
  FreeRTOS\queue.c(1855,9): note :  in expansion of macro 'listLIST_IS_EMPTY'
       if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
           ^~~~~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1855,70): note :  in expansion of macro 'pdFALSE'
       if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
                                                                        ^~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1857,78): note :  in expansion of macro 'pdFALSE'
        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
                                                                                ^~~~~~~
  FreeRTOS\include\task.h(78):
  FreeRTOS\queue.c(79):
FreeRTOS\include\list.h(291,103): error :  expected ')' before numeric constant
   #define listLIST_IS_EMPTY( pxList ) ( ( BaseType_t ) ( ( pxList )->uxNumberOfItems == ( UBaseType_t ) 0 ) )
                                                                                                         ^
  FreeRTOS\queue.c(1889,8): note :  in expansion of macro 'listLIST_IS_EMPTY'
      if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
          ^~~~~~~~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1889,66): note :  in expansion of macro 'pdFALSE'
      if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
                                                                    ^~~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1891,74): note :  in expansion of macro 'pdFALSE'
       if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
                                                                            ^~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1914,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
          ^~~~~~~~~~
  FreeRTOS/queue.c: In function 'prvIsQueueEmpty':
FreeRTOS\queue.c(1916,1): error :  unknown type name 'BaseType_t'
   BaseType_t xReturn;
   ^~~~~~~~~~
FreeRTOS\include\task.h(160,2): error :  'UBaseType_t' does not name a type
    UBaseType_t uxPriority;
    ^~~~~~~~~~~
FreeRTOS\queue.c(1920,39): error :  'UBaseType_t' undeclared (first use in this function)
     if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
                                         ^~~~~~~~~~~
FreeRTOS\queue.c(1920,54): error :  expected ')' before numeric constant
     if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
                                                        ^
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(87,22): error :  'BaseType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define pdTRUE   ( ( BaseType_t ) 1 )
                        ^
  FreeRTOS\queue.c(1922,14): note :  in expansion of macro 'pdTRUE'
      xReturn = pdTRUE;
                ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\queue.c(1922,14): note :  in expansion of macro 'pdTRUE'
      xReturn = pdTRUE;
                ^~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1926,14): note :  in expansion of macro 'pdFALSE'
      xReturn = pdFALSE;
                ^~~~~~~
FreeRTOS\include\task.h(161,2): error :  'StackType_t' does not name a type; did you mean 'StaticTimer_t'?
    StackType_t *puxStackBuffer;
    ^~~~~~~~~~~
    StaticTimer_t
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1935,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
   ^~~~~~~~~~
  FreeRTOS/queue.c: In function 'xQueueIsQueueEmptyFromISR':
FreeRTOS\queue.c(1937,1): error :  unknown type name 'BaseType_t'
   BaseType_t xReturn;
   ^~~~~~~~~~
FreeRTOS\queue.c(1940,55): error :  'UBaseType_t' undeclared (first use in this function)
    if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
                                                         ^~~~~~~~~~~
FreeRTOS\include\task.h(171,2): error :  'UBaseType_t' does not name a type
    UBaseType_t xTaskNumber;  /* A number unique to the task. */
    ^~~~~~~~~~~
FreeRTOS\queue.c(1940,69): error :  expected ')' before numeric constant
    if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
                                                                       ^
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(87,22): error :  'BaseType_t' undeclared (first use in this function); did you mean 'UBaseType_t'?
   #define pdTRUE   ( ( BaseType_t ) 1 )
                        ^
  FreeRTOS\queue.c(1942,13): note :  in expansion of macro 'pdTRUE'
     xReturn = pdTRUE;
               ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\queue.c(1942,13): note :  in expansion of macro 'pdTRUE'
     xReturn = pdTRUE;
               ^~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1946,13): note :  in expansion of macro 'pdFALSE'
     xReturn = pdFALSE;
               ^~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1953,8): error :  unknown type name 'BaseType_t'
   static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
          ^~~~~~~~~~
  FreeRTOS/queue.c: In function 'prvIsQueueFull':
FreeRTOS\queue.c(1955,1): error :  unknown type name 'BaseType_t'
   BaseType_t xReturn;
   ^~~~~~~~~~
FreeRTOS\include\task.h(173,2): error :  'UBaseType_t' does not name a type
    UBaseType_t uxCurrentPriority; /* The priority at which the task was running (may be inherited) when the structure was populated. */
    ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(87,22): error :  'BaseType_t' undeclared (first use in this function)
   #define pdTRUE   ( ( BaseType_t ) 1 )
                        ^
  FreeRTOS\queue.c(1961,14): note :  in expansion of macro 'pdTRUE'
      xReturn = pdTRUE;
                ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\queue.c(1961,14): note :  in expansion of macro 'pdTRUE'
      xReturn = pdTRUE;
                ^~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1965,14): note :  in expansion of macro 'pdFALSE'
      xReturn = pdFALSE;
                ^~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(1974,1): error :  unknown type name 'BaseType_t'
   BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
   ^~~~~~~~~~
  FreeRTOS/queue.c: In function 'xQueueIsQueueFullFromISR':
FreeRTOS\queue.c(1976,1): error :  unknown type name 'BaseType_t'
   BaseType_t xReturn;
   ^~~~~~~~~~
FreeRTOS\include\task.h(174,2): error :  'UBaseType_t' does not name a type
    UBaseType_t uxBasePriority;  /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
    ^~~~~~~~~~~
  FreeRTOS\include\FreeRTOS.h(101):
  FreeRTOS\queue.c(78):
FreeRTOS\include\projdefs.h(87,22): error :  'BaseType_t' undeclared (first use in this function)
   #define pdTRUE   ( ( BaseType_t ) 1 )
                        ^
  FreeRTOS\queue.c(1981,13): note :  in expansion of macro 'pdTRUE'
     xReturn = pdTRUE;
               ^~~~~~
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\queue.c(1981,13): note :  in expansion of macro 'pdTRUE'
     xReturn = pdTRUE;
               ^~~~~~
FreeRTOS\include\projdefs.h(86,36): error :  expected ')' before numeric constant
   #define pdFALSE   ( ( BaseType_t ) 0 )
                                      ^
  FreeRTOS\queue.c(1985,13): note :  in expansion of macro 'pdFALSE'
     xReturn = pdFALSE;
               ^~~~~~~
  FreeRTOS/queue.c: At top level:
FreeRTOS\queue.c(2358,61): error :  unknown type name 'TickType_t'
    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
                                                               ^~~~~~~~~~
FreeRTOS\queue.c(2358,92): error :  unknown type name 'BaseType_t'
    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
                                                                                              ^~~~~~~~~~
  LED_control.h(25):
  main.cpp(24):
FreeRTOS\include\task.h(176,2): error :  'StackType_t' does not name a type; did you mean 'StaticTimer_t'?
    StackType_t *pxStackBase;  /* Points to the lowest address of the task's stack area. */
    ^~~~~~~~~~~
    StaticTimer_t
FreeRTOS\include\task.h(360,2): error :  'BaseType_t' does not name a type
    BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
    ^~~~~~~~~~
FreeRTOS\include\task.h(695,24): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
                          ^~~~~~~~~~
                          TPI_Type
FreeRTOS\include\task.h(754,23): error :  variable or field 'vTaskDelayUntil' declared void
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
FreeRTOS\include\task.h(754,23): error :  'TickType_t' was not declared in this scope
  FreeRTOS\include\task.h(754,23): note :  suggested alternative: 'TPI_Type'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                         ^~~~~~~~~~
                         TPI_Type
FreeRTOS\include\task.h(754,36): error :  expected primary-expression before 'const'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                      ^~~~~
FreeRTOS\include\task.h(754,62): error :  expected primary-expression before 'const'
   void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
                                                                ^~~~~
FreeRTOS\include\task.h(779,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskAbortDelay( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(826,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(834,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(908,68): error :  'BaseType_t' has not been declared
   void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState ) PRIVILEGED_FUNCTION;
                                                                      ^~~~~~~~~~
FreeRTOS\include\task.h(950,44): error :  'UBaseType_t' has not been declared
   void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) PRIVILEGED_FUNCTION;
                                              ^~~~~~~~~~~
FreeRTOS\include\task.h(1079,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1273,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskResumeAll( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1288,1): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   TickType_t xTaskGetTickCount( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
   TPI_Type
FreeRTOS\include\task.h(1304,1): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   TickType_t xTaskGetTickCountFromISR( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
   TPI_Type
FreeRTOS\include\task.h(1318,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxTaskGetNumberOfTasks( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1368,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1421,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1529,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(1711,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1802,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1879,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(1980,58): error :  'BaseType_t' has not been declared
   void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
FreeRTOS\include\task.h(2049,28): error :  'BaseType_t' was not declared in this scope
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                              ^~~~~~~~~~
FreeRTOS\include\task.h(2049,58): error :  'TickType_t' was not declared in this scope
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
  FreeRTOS\include\task.h(2049,58): note :  suggested alternative: 'TPI_Type'
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                            ^~~~~~~~~~
                                                            TPI_Type
FreeRTOS\include\task.h(2049,82): error :  expression list treated as compound expression in initializer [-fpermissive]
   uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                    ^
FreeRTOS\include\task.h(2065,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );
   ^~~~~~~~~~
FreeRTOS\include\task.h(2086,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskIncrementTick( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2119,63): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                 ^~~~~~~~~~
                                                                 TPI_Type
FreeRTOS\include\task.h(2120,66): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                    ^~~~~~~~~~
                                                                    TPI_Type
FreeRTOS\include\task.h(2120,95): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
                                                                                                 ^~~~~~~~~~
                                                                                                 TPI_Type
FreeRTOS\include\task.h(2133,67): error :  'TickType_t' has not been declared
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                     ^~~~~~~~~~
FreeRTOS\include\task.h(2133,98): error :  'BaseType_t' does not name a type
   void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
                                                                                                    ^~~~~~~~~~
FreeRTOS\include\task.h(2159,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2160,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2176,1): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   TickType_t uxTaskResetEventItemValue( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
   TPI_Type
FreeRTOS\include\task.h(2192,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2204,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskGetSchedulerState( void ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2216,1): error :  'BaseType_t' does not name a type
   BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~
FreeRTOS\include\task.h(2221,1): error :  'UBaseType_t' does not name a type
   UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
   ^~~~~~~~~~~
FreeRTOS\include\task.h(2227,52): error :  'UBaseType_t' does not name a type
   void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
                                                      ^~~~~~~~~~~
FreeRTOS\include\task.h(2237,27): error :  'TickType_t' does not name a type; did you mean 'TPI_Type'?
   void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
                             ^~~~~~~~~~
                             TPI_Type
  main.cpp: In function 'int main()':
main.cpp(57,2): error :  'BaseType_t' was not declared in this scope
    BaseType_t xReturned = pdPASS;
    ^~~~~~~~~~
main.cpp(59,2): error :  'xReturned' was not declared in this scope
    xReturned &= xTaskCreate( tUART_RxTask  , "UART Receive" , 128 , NULL, configMAX_PRIORITIES - 1, NULL );     /* Task to Receive input from the terminal, and process it in the program    */
    ^~~~~~~~~
main.cpp(59,15): error :  'xTaskCreate' was not declared in this scope
    xReturned &= xTaskCreate( tUART_RxTask  , "UART Receive" , 128 , NULL, configMAX_PRIORITIES - 1, NULL );     /* Task to Receive input from the terminal, and process it in the program    */
                 ^~~~~~~~~~~
  main.cpp(59,15): note :  suggested alternative: 'eTaskState'
    xReturned &= xTaskCreate( tUART_RxTask  , "UART Receive" , 128 , NULL, configMAX_PRIORITIES - 1, NULL );     /* Task to Receive input from the terminal, and process it in the program    */
                 ^~~~~~~~~~~
                 eTaskState
  FreeRTOS\include\FreeRTOS.h(101):
  Programs_file.h(22):
  main.cpp(23):
FreeRTOS\include\projdefs.h(87,35): error :  expected ')' before numeric constant
   #define pdTRUE   ( ( BaseType_t ) 1 )
                                     ^
  FreeRTOS\include\projdefs.h(89,20): note :  in expansion of macro 'pdTRUE'
   #define pdPASS   ( pdTRUE )
                      ^~~~~~
  main.cpp(67,19): note :  in expansion of macro 'pdPASS'
    if (xReturned == pdPASS)
                     ^~~~~~
main.cpp(68,100): error :  expected ')' before ';' token
     xTaskCreate( tLEDAlive  ,  "LED Alive task" , 32 , NULL, configMAX_PRIORITIES - 1, &AliveHandle );
                                                                                                      ^
main.cpp(68,100): error :  expected ')' before ';' token
